buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "Forge"
            url = "https://maven.minecraftforge.net/"
        }
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "6.+", changing: true
        classpath group: "org.spongepowered", name: "mixingradle", version: "0.7.+"
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "eclipse"
apply plugin: "maven-publish"
apply plugin: "org.spongepowered.mixin"

version = "${mod_version}"
group = "${mod_group}.${mod_id}"
archivesBaseName = "${mod_id}-${minecraft_version}"

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: "official", version: "${mappings_version}"
    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")
    runs {
        client {
            workingDirectory project.file("run")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                expandedgamerules {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            mods {
                expandedgamerules {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file("run")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            args "--mod", "${mod_id}", "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")
            mods {
                expandedgamerules {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir "src/generated/resources" }

repositories {
    maven {
        name = "Create"
        url = "https://maven.tterrag.com/"
    }
    maven {
        name = "Curios"
        url = "https://maven.theillusivec4.top/"
    }
    exclusiveContent {
        forRepository {
            maven {
                url "https://cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }
    flatDir {
        dirs "localMods"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
    implementation fg.deobf("create:create:${create_version}")
    implementation fg.deobf("flywheel:flywheel:${flywheel_version}")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")
}

mixin {
    add sourceSets.main, "mixins.${mod_id}.refmap.json"
    config "mixins.${mod_id}.json"

    debug.verbose = true
    debug.export = true
}

processResources {
    def expandProps = [
            "mod_version": mod_version,
            "mod_group": mod_group,
            "minecraft_version": minecraft_version,
            "forge_version": forge_version,
            "forge_loader_version_range": forge_loader_version_range,
            "forge_version_range": forge_version_range,
            "minecraft_version_range": minecraft_version_range,
            "curios_version_range": curios_version_range,
            "create_version_range": create_version_range,
            "mod_id": mod_id,
            "mod_name": mod_name,
            "mod_description": mod_description,
            "mod_author": mod_author,
            "mod_license": mod_license,
            "mod_credits": mod_credits
    ]

    filesMatching(['pack.mcmeta', 'META-INF/mods.toml', '*.mixins.json']) {
        expand expandProps
    }
    inputs.properties(expandProps)
}

jar {
    manifest {
        attributes([
            "TweakcClass": "org.spongepowered.asm.launch.MixinTweaker",
            "MixinConfigs": "mixins.${mod_id}.json",
            "FMCorePluginContainsFMLMod": "true",
            "Specification-Title": "${mod_name}",
            "Specification-Vendor": "${mod_author}",
            "Specification-Version": "1",
            "Implementation-Title": "${mod_name}",
            "Implementation-Version": "${mod_version}",
            "Implementation-Vendor" : "${mod_author}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy("reobfJar")

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
